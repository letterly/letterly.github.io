function toBraille(text){
    text = " " + text + " "
    if(language.value == "fr"){
        g = [ //add decimal and comma later
            [" 1", " ‚††‚†°"],
            ["1", "‚†°"],
            [" 2", " ‚††‚†£"],
            ["2", "‚†£"],
            [" 3", " ‚††‚†©"],
            ["3", "‚†©"],
            [" 4", " ‚††‚†π"],
            ["4", "‚†π"],
            [" 5", " ‚††‚†±"],
            ["5", "‚†±"],
            [" 6", " ‚††‚†´"],
            ["6", "‚†´"],
            [" 7", " ‚††‚†ª"],
            ["7", "‚†ª"],
            [" 8", " ‚††‚†≥"],
            ["8", "‚†≥"],
            [" 9", " ‚††‚†™"],
            ["9", "‚†™"],
            [" 0", " ‚††‚†º"],
            ["0", "‚†º"],
        ]
    }
    else if(language.value == "lb"){
        g = [ //add decimal and comma later
            ["1", "‚†°"],
            ["2", "‚†£"],
            ["3", "‚†©"],
            ["4", "‚†π"],
            ["5", "‚†±"],
            ["6", "‚†´"],
            ["7", "‚†ª"],
            ["8", "‚†≥"],
            ["9", "‚†™"],
            ["0", "‚†º"],
        ]
    }
    else if(language.value == "th"){
        g = [
            [" 1", " ‚†º‚†Å"],
            ["1", "‚†Å"],
            [" 2", " ‚†º‚†É"],
            ["2", "‚†É"],
            [" 3", " ‚†º‚†â"],
            ["3", "‚†â"],
            [" 4", " ‚†º‚†ô"],
            ["4", "‚†ô"],
            [" 5", " ‚†º‚†ë"],
            ["5", "‚†ë"],
            [" 6", " ‚†º‚†ã"],
            ["6", "‚†ã"],
            [" 7", " ‚†º‚†õ"],
            ["7", "‚†õ"],
            [" 8", " ‚†º‚†ì"],
            ["8", "‚†ì"],
            [" 9", " ‚†º‚†ä"],
            ["9", "‚†ä"],
            [" 0", " ‚†º‚†ö"],
            ["0", "‚†ö"],
            [" ‡πë", " ‚††‚†º‚†Å"],
            ["‡πë", "‚†Å"],
            [" ‡πí", " ‚††‚†º‚†É"],
            ["‡πí", "‚†É"],
            [" ‡πì", " ‚††‚†º‚†â"],
            ["‡πì", "‚†â"],
            [" ‡πî", " ‚††‚†º‚†ô"],
            ["‡πî", "‚†ô"],
            [" ‡πï", " ‚††‚†º‚†ë"],
            ["‡πï", "‚†ë"],
            [" ‡πñ", " ‚††‚†º‚†ã"],
            ["‡πñ", "‚†ã"],
            [" ‡πó", " ‚††‚†º‚†õ"],
            ["‡πó", "‚†õ"],
            [" ‡πò", " ‚††‚†º‚†ì"],
            ["‡πò", "‚†ì"],
            [" ‡πô", " ‚††‚†º‚†ä"],
            ["‡πô", "‚†ä"],
            [" ‡πê", " ‚††‚†º‚†ö"],
            ["‡πê", "‚†ö"],
        ]
    }
    else if(language.value == "ar"){
        g = [
            [" 1", " ‚†º‚†Å"],
            ["1", "‚†Å"],
            [" 2", " ‚†º‚†É"],
            ["2", "‚†É"],
            [" 3", " ‚†º‚†â"],
            ["3", "‚†â"],
            [" 4", " ‚†º‚†ô"],
            ["4", "‚†ô"],
            [" 5", " ‚†º‚†ë"],
            ["5", "‚†ë"],
            [" 6", " ‚†º‚†ã"],
            ["6", "‚†ã"],
            [" 7", " ‚†º‚†õ"],
            ["7", "‚†õ"],
            [" 8", " ‚†º‚†ì"],
            ["8", "‚†ì"],
            [" 9", " ‚†º‚†ä"],
            ["9", "‚†ä"],
            [" 0", " ‚†º‚†ö"],
            ["0", "‚†ö"],
            [" Ÿ°", " ‚†º‚†Å"],
            ["Ÿ°", "‚†Å"],
            [" Ÿ¢", " ‚†º‚†É"],
            ["Ÿ¢", "‚†É"],
            [" Ÿ£", " ‚†º‚†â"],
            ["Ÿ£", "‚†â"],
            [" Ÿ§", " ‚†º‚†ô"],
            ["Ÿ§", "‚†ô"],
            [" Ÿ•", " ‚†º‚†ë"],
            ["Ÿ•", "‚†ë"],
            [" Ÿ¶", " ‚†º‚†ã"],
            ["Ÿ¶", "‚†ã"],
            [" Ÿß", " ‚†º‚†õ"],
            ["Ÿß", "‚†õ"],
            [" Ÿ®", " ‚†º‚†ì"],
            ["Ÿ®", "‚†ì"],
            [" Ÿ©", " ‚†º‚†ä"],
            ["Ÿ©", "‚†ä"],
            [" Ÿ†", " ‚†º‚†ö"],
            ["Ÿ†", "‚†ö"],
        ]
    }
    else if(language.value == "hi"){
        g = [
            [" 1", " ‚†º‚†Å"],
            ["1", "‚†Å"],
            [" 2", " ‚†º‚†É"],
            ["2", "‚†É"],
            [" 3", " ‚†º‚†â"],
            ["3", "‚†â"],
            [" 4", " ‚†º‚†ô"],
            ["4", "‚†ô"],
            [" 5", " ‚†º‚†ë"],
            ["5", "‚†ë"],
            [" 6", " ‚†º‚†ã"],
            ["6", "‚†ã"],
            [" 7", " ‚†º‚†õ"],
            ["7", "‚†õ"],
            [" 8", " ‚†º‚†ì"],
            ["8", "‚†ì"],
            [" 9", " ‚†º‚†ä"],
            ["9", "‚†ä"],
            [" 0", " ‚†º‚†ö"],
            ["0", "‚†ö"],
            [" ‡•ß", " ‚†º‚†Å"],
            ["‡•ß", "‚†Å"],
            [" ‡•®", " ‚†º‚†É"],
            ["‡•®", "‚†É"],
            [" ‡•©", " ‚†º‚†â"],
            ["‡•©", "‚†â"],
            [" ‡•™", " ‚†º‚†ô"],
            ["‡•™", "‚†ô"],
            [" ‡•´", " ‚†º‚†ë"],
            ["‡•´", "‚†ë"],
            [" ‡•¨", " ‚†º‚†ã"],
            ["‡•¨", "‚†ã"],
            [" ‡•≠", " ‚†º‚†õ"],
            ["‡•≠", "‚†õ"],
            [" ‡•Æ", " ‚†º‚†ì"],
            ["‡•Æ", "‚†ì"],
            [" ‡•Ø", " ‚†º‚†ä"],
            ["‡•Ø", "‚†ä"],
            [" ‡•¶", " ‚†º‚†ö"],
            ["‡•¶", "‚†ö"],
        ]
    }
    else if(language.value == "ff"){
        g = [
            [" û•ë", " ‚†º‚†Å"],
            ["û•ë", "‚†Å"],
            [" û•í", " ‚†º‚†É"],
            ["û•í", "‚†É"],
            [" û•ì", " ‚†º‚†â"],
            ["û•ì", "‚†â"],
            [" û•î", " ‚†º‚†ô"],
            ["û•î", "‚†ô"],
            [" û•ï", " ‚†º‚†ë"],
            ["û•ï", "‚†ë"],
            [" û•ñ", " ‚†º‚†ã"],
            ["û•ñ", "‚†ã"],
            [" û•ó", " ‚†º‚†õ"],
            ["û•ó", "‚†õ"],
            [" û•ò", " ‚†º‚†ì"],
            ["û•ò", "‚†ì"],
            [" û•ô", " ‚†º‚†ä"],
            ["û•ô", "‚†ä"],
            [" û•ê", " ‚†º‚†ö"],
            ["û•ê", "‚†ö"],
        ]
    }
    else if(language.value == "ur_pk"){
        g = [
            [" 1", " ‚†º‚†Å"],
            ["1", "‚†Å"],
            [" 2", " ‚†º‚†É"],
            ["2", "‚†É"],
            [" 3", " ‚†º‚†â"],
            ["3", "‚†â"],
            [" 4", " ‚†º‚†ô"],
            ["4", "‚†ô"],
            [" 5", " ‚†º‚†ë"],
            ["5", "‚†ë"],
            [" 6", " ‚†º‚†ã"],
            ["6", "‚†ã"],
            [" 7", " ‚†º‚†õ"],
            ["7", "‚†õ"],
            [" 8", " ‚†º‚†ì"],
            ["8", "‚†ì"],
            [" 9", " ‚†º‚†ä"],
            ["9", "‚†ä"],
            [" 0", " ‚†º‚†ö"],
            ["0", "‚†ö"],
            [" €±", " ‚†º‚†Å"],
            ["€±", "‚†Å"],
            [" €≤", " ‚†º‚†É"],
            ["€≤", "‚†É"],
            [" €≥", " ‚†º‚†â"],
            ["€≥", "‚†â"],
            [" €¥", " ‚†º‚†ô"],
            ["€¥", "‚†ô"],
            [" €µ", " ‚†º‚†ë"],
            ["€µ", "‚†ë"],
            [" €∂", " ‚†º‚†ã"],
            ["€∂", "‚†ã"],
            [" €∑", " ‚†º‚†õ"],
            ["€∑", "‚†õ"],
            [" €∏", " ‚†º‚†ì"],
            ["€∏", "‚†ì"],
            [" €π", " ‚†º‚†ä"],
            ["€π", "‚†ä"],
            [" €∞", " ‚†º‚†ö"],
            ["€∞", "‚†ö"],
        ]
    }
    else if(language.value == "lo"){
        g = [
            [" 1", " ‚†º‚†Å"],
            ["1", "‚†Å"],
            [" 2", " ‚†º‚†É"],
            ["2", "‚†É"],
            [" 3", " ‚†º‚†â"],
            ["3", "‚†â"],
            [" 4", " ‚†º‚†ô"],
            ["4", "‚†ô"],
            [" 5", " ‚†º‚†ë"],
            ["5", "‚†ë"],
            [" 6", " ‚†º‚†ã"],
            ["6", "‚†ã"],
            [" 7", " ‚†º‚†õ"],
            ["7", "‚†õ"],
            [" 8", " ‚†º‚†ì"],
            ["8", "‚†ì"],
            [" 9", " ‚†º‚†ä"],
            ["9", "‚†ä"],
            [" 0", " ‚†º‚†ö"],
            ["0", "‚†ö"],
            [" ‡ªë", " ‚††‚†º‚†Å"],
            ["‡ªë", "‚†Å"],
            [" ‡ªí", " ‚††‚†º‚†É"],
            ["‡ªí", "‚†É"],
            [" ‡ªì", " ‚††‚†º‚†â"],
            ["‡ªì", "‚†â"],
            [" ‡ªî", " ‚††‚†º‚†ô"],
            ["‡ªî", "‚†ô"],
            [" ‡ªï", " ‚††‚†º‚†ë"],
            ["‡ªï", "‚†ë"],
            [" ‡ªñ", " ‚††‚†º‚†ã"],
            ["‡ªñ", "‚†ã"],
            [" ‡ªó", " ‚††‚†º‚†õ"],
            ["‡ªó", "‚†õ"],
            [" ‡ªò", " ‚††‚†º‚†ì"],
            ["‡ªò", "‚†ì"],
            [" ‡ªô", " ‚††‚†º‚†ä"],
            ["‡ªô", "‚†ä"],
            [" ‡ªê", " ‚††‚†º‚†ö"],
            ["‡ªê", "‚†ö"],
        ]
    }
    else if(language.value == "hoc"){
        g = [
            [" ë£°", " ‚†º‚†Å"],
            ["ë£°", "‚†Å"],
            [" ë£¢", " ‚†º‚†É"],
            ["ë£¢", "‚†É"],
            [" ë££", " ‚†º‚†â"],
            ["ë££", "‚†â"],
            [" ë£§", " ‚†º‚†ô"],
            ["ë£§", "‚†ô"],
            [" ë£•", " ‚†º‚†ë"],
            ["ë£•", "‚†ë"],
            [" ë£¶", " ‚†º‚†ã"],
            ["ë£¶", "‚†ã"],
            [" ë£ß", " ‚†º‚†õ"],
            ["ë£ß", "‚†õ"],
            [" ë£®", " ‚†º‚†ì"],
            ["ë£®", "‚†ì"],
            [" ë£©", " ‚†º‚†ä"],
            ["ë£©", "‚†ä"],
            [" ë£†", " ‚†º‚†ö"],
            ["ë£†", "‚†ö"],
        ]
    }
    else{
        g = []
        for(q = 0; q < 10; q++){
            sym = "‚†ö‚†Å‚†É‚†â‚†ô‚†ë‚†ã‚†õ‚†ì‚†ä".charAt(q)
            g.push([" " + q, " ‚†º" + sym])
            g.push([q, sym])
        }
    }
    g.push([" ", "‚†Ä"])


    if(["lo", "th"].includes(language.value)){
        specialvowellist = "‡πÇ‡πÅ‡πÄ‡πÑ‡πÉ‡ªÅ‡ªÄ‡ªÇ‡ªÑ‡ªÉ"
        newword = ""
        specialvowel = ""
        for(w of text.split("")){
            if(specialvowellist.includes(w)){
                specialvowel = w
            }
            else{
                newword += w
                if(specialvowel != ""){
                    newword += specialvowel
                    specialvowel = ""
                }
            }
        }
        text = newword
    }

    for(l of Object.entries(unicodenorm)){
        text = text.replace(new RegExp(l[0], "g"), l[1])
    }

    for(l of Object.entries(languages[language.value])){
        text = text.replace(new RegExp(l[0], "g"), l[1])
        if(language.value == "ff") text = text.replace(new RegExp(l[0].toUpperCase(), "g"), otherdata[language.value].capital + l[1])
        else if(l[0].toUpperCase != l[0] && scriptData[otherdata[language.value].script].capitalize && !(Object.keys(languages[language.value]).includes("ƒ∞") && "Iiƒ±ƒ∞".includes(l[0]))) text = text.replace(new RegExp(l[0].charAt(0).toUpperCase() + l[0].slice(1), "g"), otherdata[language.value].capital + l[1])
    }

    for(l of g){
        text = text.replace(new RegExp(l[0], "g"), l[1])
    }

    return text.slice(1, -1)
}

function printBraille(text){
    output.value = toBraille(text)
    if(document.getElementById("language").value == "lb"){
        ascii.textContent = "Sorry, ASCII Braille does not exist for 8-dot systems"
    }
    else asciize()
}


function changethelang(lang){
    url = new URL(window.location.href)
    url.searchParams.set('lang', lang);
    history.pushState({}, "", url);
    changeLang(lang)
}

function changeLang(lang){
    



    stringo = {
        "‚†Ä": " ",
        "‚†Æ": "!",
        "‚†ê": `"`,
        "‚†º": "#",
        "‚†´": "$",
        "‚†©": "%",
        "‚†Ø": "&",
        "‚†Ñ": "'",
        "‚†∑": "(",
        "‚†æ": ")",
        "‚†°": "*",
        "‚†¨": "+",
        "‚††": ",",
        "‚†§": "-",
        "‚†®": ".",
        "‚†å": "/",
        "‚†¥": "0",
        "‚†Ç": "1",
        "‚†Ü": "2",
        "‚†í": "3",
        "‚†≤": "4",
        "‚†¢": "5",
        "‚†ñ": "6",
        "‚†∂": "7",
        "‚†¶": "8",
        "‚†î": "9",
        "‚†±": ":",
        "‚†∞": ";",
        "‚†£": "<",
        "‚†ø": "=",
        "‚†ú": ">",
        "‚†π": "?",
        "‚†à": "@",
        "‚†Å": "a",
        "‚†É": "b",
        "‚†â": "c",
        "‚†ô": "d",
        "‚†ë": "e",
        "‚†ã": "f",
        "‚†õ": "g",
        "‚†ì": "h",
        "‚†ä": "i",
        "‚†ö": "j",
        "‚†Ö": "k",
        "‚†á": "l",
        "‚†ç": "m",
        "‚†ù": "n",
        "‚†ï": "o",
        "‚†è": "p",
        "‚†ü": "q",
        "‚†ó": "r",
        "‚†é": "s",
        "‚†û": "t",
        "‚†•": "u",
        "‚†ß": "v",
        "‚†∫": "w",
        "‚†≠": "x",
        "‚†Ω": "y",
        "‚†µ": "z",
        "‚†™": "[",
        "‚†≥": "\\",
        "‚†ª": "]",
        "‚†ò": "^",
        "‚†∏": "_",
    }
    document.getElementById("language").value = lang
    input.dir = scriptData[otherdata[lang].script].dir
    input.placeholder = otherdata[lang].writeHere + "..."
    title.textContent = otherdata[lang].title ?? "Braille Conversion Website"
    harriswebsite.textContent = otherdata[lang].byharris ?? "By Harris Mowbray"
    update.textContent = otherdata[lang].updates ?? "Updates"
    choose.textContent = (otherdata[lang].choose ?? "Choose a Language") + ":"

    brltype.textContent = otherdata[lang].braille1 ?? (language.options[language.selectedIndex].text.split(" | ")[0] + " Braille")
    thebrltype.textContent = otherdata[lang].braille2 ?? (language.options[language.selectedIndex].text.split(" | ")[0] + " Braille Punctuation")


    for(r = 0; r < 6; r++){
        document.getElementById("t" + r).innerHTML = ""
        document.getElementById("y" + r).innerHTML = ""
    }

    punc = `()[]{},.:;-‚Äî'!?¬∞"$*‚Äû‚Äú‚Äö‚Äò/\\_<>&#%‚Ä∞+=@‚Äù¬´¬ª¬ß|·ç°·ç¢·ç£·ç§·ç¶·çß·éêÿüÿåÿõ€î’û÷ä’ù÷â’ú÷æ¬∑`

    theletters = Object.entries(languages[lang]).filter(f => !punc.includes(f[0].replace("\\", "") ) && (lang == "osa" || f[0] == f[0].toLowerCase()) && f[0].length <= 3 && f[0] != "‚Ä´").sort((a,b) => a[0].length - b[0].length)

    thepunctuation = Object.entries(languages[lang]).filter(f => punc.includes(f[0].replace("\\", ""))).sort()

    theletters.forEach(([k, v], i) => document.getElementById("t" +  (input.dir == "rtl" ? (5 - (i % 6)) : (i % 6))  ).innerHTML += `<tr><td>${k.replace("\\", "")}</td><td><span class="brl">${v}</span></td></tr>` )

    thepunctuation.forEach(([k, v], i) => document.getElementById("y" + (i % 6)).innerHTML += `<tr><td>${k.replace("\\", "")}</td><td><span class="brl">${v}</span></td></tr>` )



}



function asciize(){
    stringo = {
        "‚†Ä": " ",
        "‚†Æ": "!",
        "‚†ê": `"`,
        "‚†º": "#",
        "‚†´": "$",
        "‚†©": "%",
        "‚†Ø": "&",
        "‚†Ñ": "'",
        "‚†∑": "(",
        "‚†æ": ")",
        "‚†°": "*",
        "‚†¨": "+",
        "‚††": ",",
        "‚†§": "-",
        "‚†®": ".",
        "‚†å": "/",
        "‚†¥": "0",
        "‚†Ç": "1",
        "‚†Ü": "2",
        "‚†í": "3",
        "‚†≤": "4",
        "‚†¢": "5",
        "‚†ñ": "6",
        "‚†∂": "7",
        "‚†¶": "8",
        "‚†î": "9",
        "‚†±": ":",
        "‚†∞": ";",
        "‚†£": "<",
        "‚†ø": "=",
        "‚†ú": ">",
        "‚†π": "?",
        "‚†à": "@",
        "‚†Å": "a",
        "‚†É": "b",
        "‚†â": "c",
        "‚†ô": "d",
        "‚†ë": "e",
        "‚†ã": "f",
        "‚†õ": "g",
        "‚†ì": "h",
        "‚†ä": "i",
        "‚†ö": "j",
        "‚†Ö": "k",
        "‚†á": "l",
        "‚†ç": "m",
        "‚†ù": "n",
        "‚†ï": "o",
        "‚†è": "p",
        "‚†ü": "q",
        "‚†ó": "r",
        "‚†é": "s",
        "‚†û": "t",
        "‚†•": "u",
        "‚†ß": "v",
        "‚†∫": "w",
        "‚†≠": "x",
        "‚†Ω": "y",
        "‚†µ": "z",
        "‚†™": "[",
        "‚†≥": "\\",
        "‚†ª": "]",
        "‚†ò": "^",
        "‚†∏": "_",
    }
    v = (output.value)

    for(o of Object.entries(stringo)){
        v = v.replace(new RegExp(o[0], "g"), o[1])
    }

    rowlength = 0

    v = v.split(" ")
    asciival = []
    for(vvvv of v){
        rowlength += (vvvv.length)
        if(rowlength >= 32){
            asciival.push(vvvv)
            rowlength = vvvv.length
        }
        else{
            if(asciival.length == 0){
                asciival[0] = vvvv
            }
            else{
                asciival[asciival.length - 1] += (" " + vvvv)
                rowlength++
            }
        }
    }

    ascii.value = asciival.join("\n")

}

function ASCIItoUnicode(){
    stringo = {
        "‚†Ä": " ",
        "‚†Æ": "\\!",
        "‚†ê": `"`,
        "‚†º": "#",
        "‚†´": "\\$",
        "‚†©": "%",
        "‚†Ø": "&",
        "‚†Ñ": "'",
        "‚†∑": "\\(",
        "‚†æ": "\\)",
        "‚†°": "\\*",
        "‚†¨": "\\+",
        "‚††": "\\,",
        "‚†§": "\\-",
        "‚†®": "\\.",
        "‚†å": "\\/",
        "‚†¥": "0",
        "‚†Ç": "1",
        "‚†Ü": "2",
        "‚†í": "3",
        "‚†≤": "4",
        "‚†¢": "5",
        "‚†ñ": "6",
        "‚†∂": "7",
        "‚†¶": "8",
        "‚†î": "9",
        "‚†±": ":",
        "‚†∞": ";",
        "‚†£": "\\<",
        "‚†ø": "\\=",
        "‚†ú": "\\>",
        "‚†π": "\\?",
        "‚†à": "@",
        "‚†Å": "a",
        "‚†É": "b",
        "‚†â": "c",
        "‚†ô": "d",
        "‚†ë": "e",
        "‚†ã": "f",
        "‚†õ": "g",
        "‚†ì": "h",
        "‚†ä": "i",
        "‚†ö": "j",
        "‚†Ö": "k",
        "‚†á": "l",
        "‚†ç": "m",
        "‚†ù": "n",
        "‚†ï": "o",
        "‚†è": "p",
        "‚†ü": "q",
        "‚†ó": "r",
        "‚†é": "s",
        "‚†û": "t",
        "‚†•": "u",
        "‚†ß": "v",
        "‚†∫": "w",
        "‚†≠": "x",
        "‚†Ω": "y",
        "‚†µ": "z",
        "‚†™": "\\[",
        "‚†≥": "\\\\",
        "‚†ª": "\\]",
        "‚†ò": "\\^",
        "‚†∏": "_",
    }
    v = ascii.value
    for(o of Object.entries(stringo)){
        v = v.replace(new RegExp(o[1], "g"), o[0])
    }
    input.value = ""
    output.value = v
}


unicodenorm = {

    //latin

    //hebrew
    "Ô¨µ": "◊ï÷º",
    "Ô≠Ñ": "◊§÷º",
    "Ô≠é": "◊§÷ø",
    "Ô≠å": "◊ë÷ø",
    "Ô¨ª": "◊õ÷º",
    "Ô¨´": "◊©◊Ç",
    "Ô¨ü": "◊ô◊ô÷∑",
    "Ô¨ù": "◊ô÷¥",
    "Ô¨Ø": "◊ê÷∏",
    "Ô¨Æ": "◊ê÷∑",
    "◊∞": "◊ï◊ï",
    "◊±": "◊ï◊ô",
    "◊≤": "◊ô◊ô",
}

canonOrder = {
    sv: "",
}

canonPunctuationOrder = [".", ",", ":", ";", "¬°", "!", "¬ø", "?", "-"] //etc...




function bruh(){
    const file = new File([ascii.value], 'file' + Math.round(Date.now() / 1000) + '.brl', {
        type: 'text/plain',
      })
      
      function download() {
        const link = document.createElement('a')
        const url = URL.createObjectURL(file)
      
        link.href = url
        link.download = file.name
        document.body.appendChild(link)
        link.click()
      
        document.body.removeChild(link)
        window.URL.revokeObjectURL(url)
      }
      download(file)
}